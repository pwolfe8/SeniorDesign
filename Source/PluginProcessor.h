/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"

// included for serial port 
#include <windows.h>
#include "stdafx.h"


//==============================================================================
/**
*/
class Plugin2AudioProcessor  : public AudioProcessor

{
public:
    //==============================================================================
    Plugin2AudioProcessor();
    ~Plugin2AudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

	// serial functions and member variables
	HANDLE hSerial;
	DWORD cBytes_out, cBytes_in, dwMask;
	char cBuffer_out[5];
	char cBuffer_in[80];
	BOOL ModifyCommSettings(HANDLE hComPort);
	BOOL setupComPort(char* port);
	void scanPorts();
	BOOL sendSerialMsg(char dacLetter, uint8 value);
	
	uint8 incomingChannelNum;
	char synth; // 'x' for external synth, 'i' for internal synth
	String errormsg;
	StringArray portlist;

private:
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Plugin2AudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
